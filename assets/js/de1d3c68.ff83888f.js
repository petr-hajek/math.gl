"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[3794],{4061:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var t=o(5893),s=o(1151);const i={},r="cutPolylineByMercatorBounds",l={id:"modules/polygon/api-reference/cut-polyline-by-mercator-bounds",title:"cutPolylineByMercatorBounds",description:"Splits a geospatial polyline at the 180th meridian.",source:"@site/../docs/modules/polygon/api-reference/cut-polyline-by-mercator-bounds.md",sourceDirName:"modules/polygon/api-reference",slug:"/modules/polygon/api-reference/cut-polyline-by-mercator-bounds",permalink:"/math.gl/docs/modules/polygon/api-reference/cut-polyline-by-mercator-bounds",draft:!1,unlisted:!1,editUrl:"https://github.com/visgl/math.gl/tree/master/website/../docs/modules/polygon/api-reference/cut-polyline-by-mercator-bounds.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"cutPolygonByMercatorBounds",permalink:"/math.gl/docs/modules/polygon/api-reference/cut-polygon-by-mercator-bounds"},next:{title:"Polygon",permalink:"/math.gl/docs/modules/polygon/api-reference/polygon"}},c={},d=[{value:"Usage",id:"usage",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"cutpolylinebymercatorbounds",children:"cutPolylineByMercatorBounds"}),"\n",(0,t.jsx)("p",{class:"badges",children:(0,t.jsx)("img",{src:"https://img.shields.io/badge/From-v3.2-blue.svg?style=flat-square",alt:"From-v3.2"})}),"\n",(0,t.jsxs)(n.p,{children:["Splits a geospatial polyline at the ",(0,t.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/180th_meridian",children:"180th meridian"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"import {cutPolylineByMercatorBounds} from '@math.gl/polygon';\n\ncutPolylineByMercatorBounds([-10, -10, 10, 10, 30, -10], {size: 2, gridResolution: 10});\n// returns [-10, -10, 0, 0, 10, 10, 20, 0, 30, -10]\n"})}),"\n",(0,t.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"cutPolylineByMercatorBounds(positions, [options]);\n"})}),"\n",(0,t.jsx)(n.p,{children:"Arguments:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"positions"})," (Array|TypedArray) - a flat array of the vertex positions that define the polyline. ",(0,t.jsx)(n.code,{children:"x"})," is longitude in degrees, and ",(0,t.jsx)(n.code,{children:"y"})," is latitude in degrees."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"options"})," (Object, optional)","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"size"})," (Number) - the number of elements in each vertex. Size ",(0,t.jsx)(n.code,{children:"2"})," will interpret ",(0,t.jsx)(n.code,{children:"positions"})," as ",(0,t.jsx)(n.code,{children:"[x0, y0, x1, y1, ...]"})," and size ",(0,t.jsx)(n.code,{children:"3"})," will interpret ",(0,t.jsx)(n.code,{children:"positions"})," as ",(0,t.jsx)(n.code,{children:"[x0, y0, z0, x1, y1, z1, ...]"}),". Default ",(0,t.jsx)(n.code,{children:"2"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"startIndex"})," (Number, optional) - the index in ",(0,t.jsx)(n.code,{children:"positions"})," to start reading vertices. Default ",(0,t.jsx)(n.code,{children:"0"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"endIndex"})," (Number, optional) - the index in ",(0,t.jsx)(n.code,{children:"positions"})," to stop reading vertices. Default ",(0,t.jsx)(n.code,{children:"positions.length"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"normalize"})," (Boolean) - make sure the output longitudes are within ",(0,t.jsx)(n.code,{children:"[-180, 180]"}),". Default ",(0,t.jsx)(n.code,{children:"true"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Returns:"}),"\n",(0,t.jsx)(n.p,{children:"An array of polylines. Each polyline is represented by a positions array that uses the same vertex size as the input."})]})}function u(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},1151:(e,n,o)=>{o.d(n,{Z:()=>l,a:()=>r});var t=o(7294);const s={},i=t.createContext(s);function r(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);