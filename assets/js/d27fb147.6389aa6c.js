"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[5110],{2085:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>d,metadata:()=>l,toc:()=>o});var n=t(4848),i=t(8453);const d={},r="Discrete Global Grids",l={id:"developer-guide/geospatial/dggs",title:"Discrete Global Grids",description:"Discrete global grid systems are powerful tools that enables us to convert geospatial data into a common, easy-to-analyze form.",source:"@site/../docs/developer-guide/geospatial/dggs.md",sourceDirName:"developer-guide/geospatial",slug:"/developer-guide/geospatial/dggs",permalink:"/math.gl/docs/developer-guide/geospatial/dggs",draft:!1,unlisted:!1,editUrl:"https://github.com/visgl/math.gl/tree/master/docs/../docs/developer-guide/geospatial/dggs.md",tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Accuracy of Offset Projection",permalink:"/math.gl/docs/developer-guide/geospatial/web-mercator-offset-accuracy"},next:{title:"Transformations",permalink:"/math.gl/docs/developer-guide/math/transformations"}},a={},o=[{value:"Why DGGS in math.gl",id:"why-dggs-in-mathgl",level:2},{value:"Goals",id:"goals",level:2},{value:"Supported Grid Systems",id:"supported-grid-systems",level:2},{value:"H3 API Conventions",id:"h3-api-conventions",level:2},{value:"Comparison of DGGS Systems",id:"comparison-of-dggs-systems",level:2},{value:"H3",id:"h3",level:3},{value:"S2",id:"s2",level:3},{value:"GeoHash",id:"geohash",level:3},{value:"QuadKey",id:"quadkey",level:3}];function c(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"discrete-global-grids",children:"Discrete Global Grids"})}),"\n",(0,n.jsx)(s.p,{children:"Discrete global grid systems are powerful tools that enables us to convert geospatial data into a common, easy-to-analyze form."}),"\n",(0,n.jsx)(s.h2,{id:"why-dggs-in-mathgl",children:"Why DGGS in math.gl"}),"\n",(0,n.jsx)(s.p,{children:"Today there are multiple DGGS grid systems, and it is not unusual for an application to have to work with\nmore than one DGGS. This can require working with a set of independent DGGS libraries with large API surfaces and subtly different API conventions, which can be taxing for implementors and maintainers."}),"\n",(0,n.jsx)(s.p,{children:"We found that there is a value in having a common set of small, easy-to-use DGGS libraries that work with common API conventions."}),"\n",(0,n.jsx)(s.h2,{id:"goals",children:"Goals"}),"\n",(0,n.jsx)(s.p,{children:"The DGGS support in math.gl is currently focused on decoding cell indexes or tokens into center points (lng/lat) or cell boundary polygons."}),"\n",(0,n.jsx)(s.p,{children:"Encoding (lng/lat to cell index) and advanced operations (child/neighbor calculation, polygon fills etc) are not currently included. Some basic encoding may be included in the future, however it is a goal to keep these libraries fairly small, and the intention is not to eventually fully duplicate large existing DGGS libraries."}),"\n",(0,n.jsx)(s.h2,{id:"supported-grid-systems",children:"Supported Grid Systems"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"DGGS"}),(0,n.jsx)(s.th,{children:"Module"}),(0,n.jsx)(s.th,{children:"Functionality"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.img,{alt:"GeoHash",src:t(2972).A+"",title:"GeoHash",width:"1268",height:"628"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"@math.gl/dggs-geohash"})}),(0,n.jsx)(s.td,{children:"Get geometry of GeoHash tokens."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.img,{alt:"QuadKey",src:t(4045).A+"",title:"QuadKey",width:"1252",height:"636"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"@math.gl/dggs-quadkey"})}),(0,n.jsx)(s.td,{children:"Get geometry of QuadKey tokens"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.img,{alt:"S2",src:t(4308).A+"",title:"S2",width:"1124",height:"588"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"@math.gl/dggs-s2"})}),(0,n.jsx)(s.td,{children:"Get geometry of S2 tokens."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.img,{alt:"H3",src:t(548).A+"",title:"H3",width:"1296",height:"726"})}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.code,{children:"h3-js"})," *"]}),(0,n.jsx)(s.td,{children:"Get geometry of H3 tokens."})]})]})]}),"\n",(0,n.jsxs)(s.p,{children:["Note that ",(0,n.jsx)(s.code,{children:"h3-js"})," is not a ",(0,n.jsx)(s.code,{children:"math.gl"})," library. For H3 it is recommended to work directly with the H3 JavaScript bindings."]}),"\n",(0,n.jsx)(s.h2,{id:"h3-api-conventions",children:"H3 API Conventions"}),"\n",(0,n.jsxs)(s.p,{children:["In terms of API design and nomenclature, the golden standard for DGGS systems at this time is arguably ",(0,n.jsx)(s.a,{href:"https://h3geo.org",children:"H3"}),", in terms of functionality, number of languages and platforms supported, community activity etc."]}),"\n",(0,n.jsx)(s.p,{children:"Rather than expose the original function names as in the existing JavaScript libraries for each DGGS, math.gl applies API naming convention based on the H3 API."}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Function"}),(0,n.jsx)(s.th,{children:(0,n.jsx)(s.strong,{children:"H3"})}),(0,n.jsx)(s.th,{children:"S2"}),(0,n.jsx)(s.th,{children:"QuadKey"}),(0,n.jsx)(s.th,{children:"GeoHash"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Get cell center"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"getH3LngLat"})})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"getS2LngLat"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"getQuadKeyLngLat"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"getGeoHashLngLat"})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Get cell boundary"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"getH3Boundary"})})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"getS2Boundary"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"getQuadKeyBoundary"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"getGeoHashBoundary"})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Get cell boundary flat"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.code,{children:"getH3BoundaryFlat"})})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"getS2BoundaryFlat"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"getQuadKeyBoundaryFlat"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"getGeoHashBoundaryFlat"})})]})]})]}),"\n",(0,n.jsx)(s.h2,{id:"comparison-of-dggs-systems",children:"Comparison of DGGS Systems"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Characteristic"}),(0,n.jsx)(s.th,{children:(0,n.jsx)(s.strong,{children:"H3"})}),(0,n.jsx)(s.th,{children:"S2"}),(0,n.jsx)(s.th,{children:"QuadKey"}),(0,n.jsx)(s.th,{children:"GeoHash"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Cell shape"}),(0,n.jsx)(s.td,{children:"Hexagon"}),(0,n.jsx)(s.td,{children:'"square"'}),(0,n.jsx)(s.td,{children:"square"}),(0,n.jsx)(s.td,{children:"square"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Cell area"}),(0,n.jsx)(s.td,{children:'"constant"'}),(0,n.jsx)(s.td,{children:"varies"}),(0,n.jsx)(s.td,{children:"varies"}),(0,n.jsx)(s.td,{children:"varies"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Neighbor distance"}),(0,n.jsx)(s.td,{children:'"constant"'}),(0,n.jsx)(s.td,{children:"1 or 1.4..."}),(0,n.jsx)(s.td,{children:"1 or 1.4..."}),(0,n.jsx)(s.td,{children:"1 or 1.4..."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Child cells"}),(0,n.jsx)(s.td,{children:"7"}),(0,n.jsx)(s.td,{children:"4"}),(0,n.jsx)(s.td,{children:"4"}),(0,n.jsx)(s.td,{children:"4"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Exact hierarchy"}),(0,n.jsx)(s.td,{children:"No"}),(0,n.jsx)(s.td,{children:"Yes"}),(0,n.jsx)(s.td,{children:"Yes"}),(0,n.jsx)(s.td,{children:"Yes"})]})]})]}),"\n",(0,n.jsx)(s.h3,{id:"h3",children:"H3"}),"\n",(0,n.jsx)(s.p,{children:"H3 is now widely used across the geospatial industry (it was initially developed at Uber).\nWhile not directly supported by math.gl, H3 is in fact the DGGS we would recommend for most applications."}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Extensive, optimized, evolving API."}),"\n",(0,n.jsx)(s.li,{children:"Superb cross-language support."}),"\n",(0,n.jsx)(s.li,{children:"Equal distance between neighboring cells"}),"\n",(0,n.jsx)(s.li,{children:"Similar size between all cells."}),"\n",(0,n.jsx)(s.li,{children:"K-ring formation for filtering and convolutions"}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:"Downsides:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"More complex projection math."}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"s2",children:"S2"}),"\n",(0,n.jsx)(s.p,{children:"S2 works well when exact aggregation and subdivision are needed but has some disadvantages when e.g. neighbor cell calculations are important"}),"\n",(0,n.jsx)(s.h3,{id:"geohash",children:"GeoHash"}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.a,{href:"http://en.wikipedia.org/wiki/Geohash",children:"Geohash"})," is common choice in the open source word."]}),"\n",(0,n.jsx)(s.p,{children:"Good cross-language support."}),"\n",(0,n.jsx)(s.h3,{id:"quadkey",children:"QuadKey"}),"\n",(0,n.jsxs)(s.p,{children:["Bing Maps uses a ",(0,n.jsx)(s.a,{href:"http://msdn.microsoft.com/en-us/library/bb259689.aspx.",children:"quadkey"})," structure as their tiling scheme. Here is an overview of the concept"]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Quadtrees are more predictable in that each level spans a square (at least in terms of coordinates), whereas in geohash representation sometimes squares sometimes rectangles are spanned."}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},2972:(e,s,t)=>{t.d(s,{A:()=>n});const n=t.p+"assets/images/geohash-c0e3daa00779237f6b20605b7db6da44.png"},548:(e,s,t)=>{t.d(s,{A:()=>n});const n=t.p+"assets/images/h3-fa04935dd44b5e557644e742b6b64d7e.png"},4045:(e,s,t)=>{t.d(s,{A:()=>n});const n=t.p+"assets/images/quadkey-d0a4bf1a3af21e75bf2379d445f0b851.png"},4308:(e,s,t)=>{t.d(s,{A:()=>n});const n=t.p+"assets/images/s2-7622e8f72c519d9a2bccfc8db662f445.png"},8453:(e,s,t)=>{t.d(s,{R:()=>r,x:()=>l});var n=t(6540);const i={},d=n.createContext(i);function r(e){const s=n.useContext(d);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),n.createElement(d.Provider,{value:s},e.children)}}}]);