"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[9298],{9731:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>t,default:()=>p,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var o=i(5893),r=i(1151);const s={},t="cutPolylineByGrid",l={id:"modules/polygon/api-reference/cut-polyline-by-grid",title:"cutPolylineByGrid",description:"Subdivides a polyline by intersecting with a uniform grid.",source:"@site/../docs/modules/polygon/api-reference/cut-polyline-by-grid.md",sourceDirName:"modules/polygon/api-reference",slug:"/modules/polygon/api-reference/cut-polyline-by-grid",permalink:"/math.gl/docs/modules/polygon/api-reference/cut-polyline-by-grid",draft:!1,unlisted:!1,editUrl:"https://github.com/visgl/math.gl/tree/master/website/../docs/modules/polygon/api-reference/cut-polyline-by-grid.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"cutPolygonByGrid",permalink:"/math.gl/docs/modules/polygon/api-reference/cut-polygon-by-grid"},next:{title:"cutPolygonByMercatorBounds",permalink:"/math.gl/docs/modules/polygon/api-reference/cut-polygon-by-mercator-bounds"}},d={},c=[{value:"Usage",id:"usage",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"cutpolylinebygrid",children:"cutPolylineByGrid"}),"\n",(0,o.jsx)("p",{class:"badges",children:(0,o.jsx)("img",{src:"https://img.shields.io/badge/From-v3.2-blue.svg?style=flat-square",alt:"From-v3.2"})}),"\n",(0,o.jsx)(n.p,{children:"Subdivides a polyline by intersecting with a uniform grid."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"import {cutPolylineByGrid} from '@math.gl/polygon';\n\ncutPolylineByGrid([-10, -10, 10, 10, 30, -10], {size: 2, gridResolution: 10});\n// returns [-10, -10, 0, 0, 10, 10, 20, 0, 30, -10]\n"})}),"\n",(0,o.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"cutPolylineByGrid(positions, [options]);\n"})}),"\n",(0,o.jsx)(n.p,{children:"Arguments:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"positions"})," (Array|TypedArray) - a flat array of the vertex positions that define the polyline."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"options"})," (Object, optional)","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"size"})," (Number) - the number of elements in each vertex. Size ",(0,o.jsx)(n.code,{children:"2"})," will interpret ",(0,o.jsx)(n.code,{children:"positions"})," as ",(0,o.jsx)(n.code,{children:"[x0, y0, x1, y1, ...]"})," and size ",(0,o.jsx)(n.code,{children:"3"})," will interpret ",(0,o.jsx)(n.code,{children:"positions"})," as ",(0,o.jsx)(n.code,{children:"[x0, y0, z0, x1, y1, z1, ...]"}),". Default ",(0,o.jsx)(n.code,{children:"2"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"startIndex"})," (Number, optional) - the index in ",(0,o.jsx)(n.code,{children:"positions"})," to start reading vertices. Default ",(0,o.jsx)(n.code,{children:"0"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"endIndex"})," (Number, optional) - the index in ",(0,o.jsx)(n.code,{children:"positions"})," to stop reading vertices. Default ",(0,o.jsx)(n.code,{children:"positions.length"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"gridResolution"})," (Number, optional) - the grid size. Default ",(0,o.jsx)(n.code,{children:"10"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"gridOffset"})," (Array, optional) - the grid offset in ",(0,o.jsx)(n.code,{children:"[x, y]"}),". Default ",(0,o.jsx)(n.code,{children:"[0, 0]"})," i.e. the grid starts from the coordinate origin."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"broken"})," (Boolean, optional) - if ",(0,o.jsx)(n.code,{children:"true"}),", the polyline is broken into multiple polylines at the subdivision points. If ",(0,o.jsx)(n.code,{children:"false"}),", subdivision points are inserted into the original polyline. Default ",(0,o.jsx)(n.code,{children:"false"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Returns:"}),"\n",(0,o.jsxs)(n.p,{children:["A polyline or an array of polylines, depending on the ",(0,o.jsx)(n.code,{children:"broken"})," option. Each polyline is represented by a positions array that uses the same vertex size as the input."]})]})}function p(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},1151:(e,n,i)=>{i.d(n,{Z:()=>l,a:()=>t});var o=i(7294);const r={},s=o.createContext(r);function t(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);