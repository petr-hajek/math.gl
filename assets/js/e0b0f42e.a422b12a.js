"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[700],{5877:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>a,contentTitle:()=>t,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var l=n(5893),i=n(1151);const o={},t="Euler",s={id:"modules/core/api-reference/euler",title:"Euler",description:"A class to handle Euler rotation. More information on rotation using a Euler vector can be found here. Generally speaking the three components of the Euler object represents the roll, pitch and yaw angles and the rotation is applied according to a specific rotation order.",source:"@site/../docs/modules/core/api-reference/euler.md",sourceDirName:"modules/core/api-reference",slug:"/modules/core/api-reference/euler",permalink:"/math.gl/docs/modules/core/api-reference/euler",draft:!1,unlisted:!1,editUrl:"https://github.com/visgl/math.gl/tree/master/website/../docs/modules/core/api-reference/euler.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/math.gl/docs/modules/core/"},next:{title:"MathArray",permalink:"/math.gl/docs/modules/core/api-reference/math-array"}},a={},c=[{value:"Usage",id:"usage",level:2},{value:"Constants",id:"constants",level:2},{value:"Members",id:"members",level:2},{value:"x, y z",id:"x-y-z",level:3},{value:"roll, pitch, yaw",id:"roll-pitch-yaw",level:3},{value:"alpha, beta, gamma",id:"alpha-beta-gamma",level:3},{value:"phi, theta, psi",id:"phi-theta-psi",level:3},{value:"order",id:"order",level:3},{value:"Methods",id:"methods",level:2},{value:"constructor",id:"constructor",level:3},{value:"fromRollPitchYaw",id:"fromrollpitchyaw",level:3},{value:"fromRotationMatrix",id:"fromrotationmatrix",level:3},{value:"fromQuaternion",id:"fromquaternion",level:3},{value:"copy",id:"copy",level:3},{value:"set",id:"set",level:3},{value:"toArray",id:"toarray",level:3},{value:"toArray4",id:"toarray4",level:3},{value:"toVector3",id:"tovector3",level:3},{value:"fromVector3",id:"fromvector3",level:3},{value:"fromArray",id:"fromarray",level:3},{value:"getRotationMatrix",id:"getrotationmatrix",level:3},{value:"getQuaternion",id:"getquaternion",level:3},{value:"Remarks",id:"remarks",level:2}];function d(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(r.h1,{id:"euler",children:"Euler"}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-js",children:"class Euler extends MathArray extends Array\n"})}),"\n",(0,l.jsxs)(r.p,{children:["A class to handle Euler rotation. More information on rotation using a Euler vector can be found ",(0,l.jsx)(r.a,{href:"https://en.wikipedia.org/wiki/Euler%27s_rotation_theorem",children:"here"}),". Generally speaking the three components of the Euler object represents the roll, pitch and yaw angles and the rotation is applied according to a specific rotation order."]}),"\n",(0,l.jsx)(r.h2,{id:"usage",children:"Usage"}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-js",children:"import {Euler} from '@math.gl/core';\n"})}),"\n",(0,l.jsx)(r.h2,{id:"constants",children:"Constants"}),"\n",(0,l.jsxs)(r.ul,{children:["\n",(0,l.jsxs)(r.li,{children:["\n",(0,l.jsx)(r.p,{children:(0,l.jsx)(r.code,{children:"Euler.ZYX"})}),"\n"]}),"\n",(0,l.jsxs)(r.li,{children:["\n",(0,l.jsx)(r.p,{children:(0,l.jsx)(r.code,{children:"Euler.YXZ"})}),"\n"]}),"\n",(0,l.jsxs)(r.li,{children:["\n",(0,l.jsx)(r.p,{children:(0,l.jsx)(r.code,{children:"Euler.XZY"})}),"\n"]}),"\n",(0,l.jsxs)(r.li,{children:["\n",(0,l.jsx)(r.p,{children:(0,l.jsx)(r.code,{children:"Euler.ZXY"})}),"\n"]}),"\n",(0,l.jsxs)(r.li,{children:["\n",(0,l.jsx)(r.p,{children:(0,l.jsx)(r.code,{children:"Euler.YZX"})}),"\n"]}),"\n",(0,l.jsxs)(r.li,{children:["\n",(0,l.jsx)(r.p,{children:(0,l.jsx)(r.code,{children:"Euler.XYZ"})}),"\n"]}),"\n",(0,l.jsxs)(r.li,{children:["\n",(0,l.jsx)(r.p,{children:(0,l.jsx)(r.code,{children:"Euler.RollPitchYaw"})}),"\n"]}),"\n",(0,l.jsxs)(r.li,{children:["\n",(0,l.jsxs)(r.p,{children:[(0,l.jsx)(r.code,{children:"Euler.DefaultOrder"})," (= ",(0,l.jsx)(r.code,{children:"Euler.ZYX"}),")"]}),"\n"]}),"\n",(0,l.jsxs)(r.li,{children:["\n",(0,l.jsxs)(r.p,{children:[(0,l.jsx)(r.code,{children:"Euler.RotationOrders"})," = ",(0,l.jsx)(r.code,{children:"['ZYX', 'YXZ', 'XZY', 'ZXY', 'YZX', 'XYZ']"}),";"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(r.h2,{id:"members",children:"Members"}),"\n",(0,l.jsx)(r.h3,{id:"x-y-z",children:"x, y z"}),"\n",(0,l.jsx)(r.p,{children:"x, y, z angle notation (note: only corresponds to axis in XYZ orientation)"}),"\n",(0,l.jsx)(r.h3,{id:"roll-pitch-yaw",children:"roll, pitch, yaw"}),"\n",(0,l.jsx)(r.p,{children:"roll, pitch, yaw angle notation"}),"\n",(0,l.jsx)(r.h3,{id:"alpha-beta-gamma",children:"alpha, beta, gamma"}),"\n",(0,l.jsx)(r.p,{children:"alpha, beta, gamma angle notation"}),"\n",(0,l.jsx)(r.h3,{id:"phi-theta-psi",children:"phi, theta, psi"}),"\n",(0,l.jsx)(r.p,{children:"phi, theta, psi angle notation"}),"\n",(0,l.jsx)(r.h3,{id:"order",children:"order"}),"\n",(0,l.jsx)(r.p,{children:"rotation order in all notations"}),"\n",(0,l.jsx)(r.h2,{id:"methods",children:"Methods"}),"\n",(0,l.jsx)(r.h3,{id:"constructor",children:"constructor"}),"\n",(0,l.jsx)(r.p,{children:"(x = 0, y = 0, z = 0, order = Euler.DefaultOrder)"}),"\n",(0,l.jsxs)(r.ul,{children:["\n",(0,l.jsx)(r.li,{children:"Number|Number[], Number, Number, Number"}),"\n"]}),"\n",(0,l.jsx)(r.h3,{id:"fromrollpitchyaw",children:"fromRollPitchYaw"}),"\n",(0,l.jsx)(r.p,{children:"Common ZYX rotation order"}),"\n",(0,l.jsx)(r.p,{children:(0,l.jsx)(r.code,{children:"euler.fromRollPitchYaw(roll, pitch, yaw)"})}),"\n",(0,l.jsx)(r.h3,{id:"fromrotationmatrix",children:"fromRotationMatrix"}),"\n",(0,l.jsx)(r.p,{children:(0,l.jsx)(r.code,{children:"euler.fromRotationMatrix(m, order = Euler.DefaultOrder)"})}),"\n",(0,l.jsx)(r.h3,{id:"fromquaternion",children:"fromQuaternion"}),"\n",(0,l.jsx)(r.p,{children:(0,l.jsx)(r.code,{children:"euler.fromQuaternion(q, order)"})}),"\n",(0,l.jsx)(r.h3,{id:"copy",children:"copy"}),"\n",(0,l.jsx)(r.p,{children:"If copied array does contain fourth element, preserves currently set order."}),"\n",(0,l.jsx)(r.p,{children:(0,l.jsx)(r.code,{children:"euler.copy(array)"})}),"\n",(0,l.jsx)(r.h3,{id:"set",children:"set"}),"\n",(0,l.jsx)(r.p,{children:"Sets the three angles, and optionally sets the rotation order. If order is not specified, preserves currently set order."}),"\n",(0,l.jsx)(r.p,{children:(0,l.jsx)(r.code,{children:"euler.set(x = 0, y = 0, z = 0, order)"})}),"\n",(0,l.jsx)(r.h3,{id:"toarray",children:"toArray"}),"\n",(0,l.jsx)(r.p,{children:"Does not copy the orientation element"}),"\n",(0,l.jsx)(r.p,{children:(0,l.jsx)(r.code,{children:"euler.toArray(array = [], offset = 0)"})}),"\n",(0,l.jsx)(r.h3,{id:"toarray4",children:"toArray4"}),"\n",(0,l.jsx)(r.p,{children:"Copies the orientation element"}),"\n",(0,l.jsx)(r.p,{children:(0,l.jsx)(r.code,{children:"euler.toArray4(array = [], offset = 0)"})}),"\n",(0,l.jsx)(r.h3,{id:"tovector3",children:"toVector3"}),"\n",(0,l.jsx)(r.p,{children:(0,l.jsx)(r.code,{children:"euler.toVector3(optionalResult)"})}),"\n",(0,l.jsx)(r.h3,{id:"fromvector3",children:"fromVector3"}),"\n",(0,l.jsx)(r.p,{children:(0,l.jsx)(r.code,{children:"euler.fromVector3(v, order)"})}),"\n",(0,l.jsx)(r.h3,{id:"fromarray",children:"fromArray"}),"\n",(0,l.jsx)(r.p,{children:(0,l.jsx)(r.code,{children:"euler.fromArray(array, offset = 0)"})}),"\n",(0,l.jsx)(r.h3,{id:"getrotationmatrix",children:"getRotationMatrix"}),"\n",(0,l.jsx)(r.p,{children:(0,l.jsx)(r.code,{children:"euler.getRotationMatrix(m = new Matrix4())"})}),"\n",(0,l.jsxs)(r.p,{children:["Returns ",(0,l.jsx)(r.code,{children:"Matrix4"})," - a rotation matrix corresponding to rotations per the specified euler angles"]}),"\n",(0,l.jsx)(r.h3,{id:"getquaternion",children:"getQuaternion"}),"\n",(0,l.jsx)(r.p,{children:(0,l.jsx)(r.code,{children:"euler.getQuaternion()"})}),"\n",(0,l.jsx)(r.h2,{id:"remarks",children:"Remarks"}),"\n",(0,l.jsxs)(r.ul,{children:["\n",(0,l.jsxs)(r.li,{children:["Attribution: inspired by THREE.js ",(0,l.jsx)(r.code,{children:"THREE.Euler"})," class"]}),"\n"]})]})}function h(e={}){const{wrapper:r}={...(0,i.a)(),...e.components};return r?(0,l.jsx)(r,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},1151:(e,r,n)=>{n.d(r,{Z:()=>s,a:()=>t});var l=n(7294);const i={},o=l.createContext(i);function t(e){const r=l.useContext(o);return l.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function s(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),l.createElement(o.Provider,{value:r},e.children)}}}]);