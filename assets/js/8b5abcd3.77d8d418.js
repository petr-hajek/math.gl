"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[3185],{5680:(e,n,t)=>{t.d(n,{xA:()=>u,yg:()=>m});var r=t(6540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=r.createContext({}),s=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=s(e.components);return r.createElement(p.Provider,{value:n},e.children)},c="mdxType",y={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},g=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=s(t),g=a,m=c["".concat(p,".").concat(g)]||c[g]||y[g]||o;return t?r.createElement(m,i(i({ref:n},u),{},{components:t})):r.createElement(m,i({ref:n},u))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=g;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l[c]="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},3513:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>i,default:()=>y,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=t(8168),a=(t(6540),t(5680));const o={},i="earcut",l={unversionedId:"modules/polygon/api-reference/earcut",id:"modules/polygon/api-reference/earcut",title:"earcut",description:"Computes a triangulation of a polygon using the earcut library.",source:"@site/../docs/modules/polygon/api-reference/earcut.md",sourceDirName:"modules/polygon/api-reference",slug:"/modules/polygon/api-reference/earcut",permalink:"/math.gl/docs/modules/polygon/api-reference/earcut",draft:!1,editUrl:"https://github.com/visgl/math.gl/tree/master/docs/../docs/modules/polygon/api-reference/earcut.md",tags:[],version:"current",frontMatter:{}},p={},s=[{value:"Usage",id:"usage",level:2}],u={toc:s},c="wrapper";function y(e){let{components:n,...t}=e;return(0,a.yg)(c,(0,r.A)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"earcut"},"earcut"),(0,a.yg)("p",{class:"badges"},(0,a.yg)("img",{src:"https://img.shields.io/badge/From-v3.5-blue.svg?style=flat-square",alt:"From-v3.5"})),(0,a.yg)("p",null,"Computes a triangulation of a polygon using the ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/mapbox/earcut"},"earcut library"),"."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},"import {earcut} from '@math.gl/polygon';\n\nearcut([10, 0, 0, 50, 60, 60, 70, 10]);\n// returns [1, 0, 3, 3, 2, 1]\n\n// Polygon with a hole starting at vertex 4\nearcut([0, 0, 100, 0, 100, 100, 0, 100, 20, 20, 80, 20, 80, 80, 20, 80], [4]);\n// returns [3, 0, 4, 5, 4, 0, 3, 4, 7, 5, 0, 1, 2, 3, 7, 6, 5, 1, 2, 7, 6, 6, 1, 2]\n")),(0,a.yg)("h2",{id:"usage"},"Usage"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},"earcut(positions[, holeIndices, size = 2, areas, plane]);\n")),(0,a.yg)("p",null,"Arguments:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"positions")," (Array|TypedArray) - a flat array of the vertex positions that define the polygon."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"holeIndices")," (Array, optional) - is an array of hole indices if any (e.g. ","[5, 8]"," for a 12-vertex input would mean one hole with vertices 5\u20137 and another with 8\u201311)."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"size")," (Number, optional) - the number of elements in each vertex. Size ",(0,a.yg)("inlineCode",{parentName:"li"},"2")," will interpret ",(0,a.yg)("inlineCode",{parentName:"li"},"positions")," as ",(0,a.yg)("inlineCode",{parentName:"li"},"[x0, y0, x1, y1, ...]")," and size ",(0,a.yg)("inlineCode",{parentName:"li"},"3")," will interpret ",(0,a.yg)("inlineCode",{parentName:"li"},"positions")," as ",(0,a.yg)("inlineCode",{parentName:"li"},"[x0, y0, z0, x1, y1, z1, ...]"),". Default ",(0,a.yg)("inlineCode",{parentName:"li"},"2"),"."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"areas")," (Array, optional) - areas of outer polygon and holes as computed by ",(0,a.yg)("inlineCode",{parentName:"li"},"getPolygonSignedArea()"),". Can be optionally supplied to speed up triangulation"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"plane")," (String, optional) - the 2D projection plane on which to tesselate a 3D polygon on. One of ",(0,a.yg)("inlineCode",{parentName:"li"},"xy"),", ",(0,a.yg)("inlineCode",{parentName:"li"},"yz"),", ",(0,a.yg)("inlineCode",{parentName:"li"},"xz"),". Default to ",(0,a.yg)("inlineCode",{parentName:"li"},"xy"))),(0,a.yg)("p",null,"Returns:"),(0,a.yg)("p",null,"An array of indices into the ",(0,a.yg)("inlineCode",{parentName:"p"},"positions")," array that describes the triangulation of the polygon"))}y.isMDXComponent=!0}}]);