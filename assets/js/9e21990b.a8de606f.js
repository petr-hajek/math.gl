"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[9094],{5680:(e,r,t)=>{t.d(r,{xA:()=>u,yg:()=>f});var n=t(6540);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var m=n.createContext({}),c=function(e){var r=n.useContext(m),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},u=function(e){var r=c(e.components);return n.createElement(m.Provider,{value:r},e.children)},s="mdxType",p={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,m=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),s=c(t),d=o,f=s["".concat(m,".").concat(d)]||s[d]||p[d]||a;return t?n.createElement(f,i(i({ref:r},u),{},{components:t})):n.createElement(f,i({ref:r},u))}));function f(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=d;var l={};for(var m in r)hasOwnProperty.call(r,m)&&(l[m]=r[m]);l.originalType=e,l[s]="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=t[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},3047:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>m,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var n=t(8168),o=(t(6540),t(5680));const a={},i="Matrix",l={unversionedId:"modules/core/api-reference/matrix",id:"modules/core/api-reference/matrix",title:"Matrix",description:"Matrix is a base class for Matrix3 and Matrix4, providing common methods to those classes.",source:"@site/../docs/modules/core/api-reference/matrix.md",sourceDirName:"modules/core/api-reference",slug:"/modules/core/api-reference/matrix",permalink:"/math.gl/docs/modules/core/api-reference/matrix",draft:!1,editUrl:"https://github.com/visgl/math.gl/tree/master/docs/../docs/modules/core/api-reference/matrix.md",tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"MathArray",permalink:"/math.gl/docs/modules/core/api-reference/math-array"},next:{title:"Matrix3",permalink:"/math.gl/docs/modules/core/api-reference/matrix3"}},m={},c=[{value:"Methods",id:"methods",level:2},{value:"toString()",id:"tostring",level:3},{value:"setElement(): this",id:"setelement-this",level:3},{value:"getElement(): number",id:"getelement-number",level:3},{value:"getColumn(columnIndex: number [ , result: number3]): number3",id:"getcolumncolumnindex-number---result-number3-number3",level:3},{value:"setColumn(columnIndex: number, columnVector: number3): Matrix",id:"setcolumncolumnindex-number-columnvector-number3-matrix",level:3}],u={toc:c},s="wrapper";function p(e){let{components:r,...t}=e;return(0,o.yg)(s,(0,n.A)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"matrix"},"Matrix"),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"Matrix")," is a base class for ",(0,o.yg)("a",{parentName:"p",href:"./docs/modules/core/api-reference/vector3"},(0,o.yg)("inlineCode",{parentName:"a"},"Matrix3"))," and ",(0,o.yg)("a",{parentName:"p",href:"./docs/modules/core/api-reference/vector4"},(0,o.yg)("inlineCode",{parentName:"a"},"Matrix4")),", providing common methods to those classes."),(0,o.yg)("h2",{id:"methods"},"Methods"),(0,o.yg)("h3",{id:"tostring"},"toString()"),(0,o.yg)("p",null,"Returns a string representation of the matrix"),(0,o.yg)("h3",{id:"setelement-this"},"setElement(): this"),(0,o.yg)("p",null,'Sets the element at "conceptual position" ',(0,o.yg)("inlineCode",{parentName:"p"},"M[i][j]"),", row major indices by default"),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"matrix3.set(i, j, value, columnMajor = false)")),(0,o.yg)("h3",{id:"getelement-number"},"getElement(): number"),(0,o.yg)("p",null,'Gets the element at "conceptual position" ',(0,o.yg)("inlineCode",{parentName:"p"},"M[i][j]"),", row major indices by default"),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"matrix3.get(i, j, columnMajor = false)")),(0,o.yg)("h3",{id:"getcolumncolumnindex-number---result-number3-number3"},"getColumn(columnIndex: number [ , result: number","[3]","]): number","[3]"),(0,o.yg)("p",null,"Extracts a column from the matrix"),(0,o.yg)("h3",{id:"setcolumncolumnindex-number-columnvector-number3-matrix"},"setColumn(columnIndex: number, columnVector: number","[3]","): Matrix"),(0,o.yg)("p",null,"Copies a column into the matrix"))}p.isMDXComponent=!0}}]);