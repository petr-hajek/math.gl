"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[4006],{3763:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var t=n(4848),i=n(8453);const s={},d="Upgrade Guide",a={id:"upgrade-guide",title:"Upgrade Guide",description:"Upgrading to v4.1",source:"@site/../docs/upgrade-guide.md",sourceDirName:".",slug:"/upgrade-guide",permalink:"/math.gl/docs/upgrade-guide",draft:!1,unlisted:!1,editUrl:"https://github.com/visgl/math.gl/tree/master/docs/../docs/upgrade-guide.md",tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"What's New",permalink:"/math.gl/docs/whats-new"},next:{title:"Get Started",permalink:"/math.gl/docs/developer-guide/get-started"}},o={},c=[{value:"Upgrading to v4.1",id:"upgrading-to-v41",level:2},{value:"Upgrading to v4.0",id:"upgrading-to-v40",level:2},{value:"Upgrading to v3.6",id:"upgrading-to-v36",level:2},{value:"Upgrading to v3.0",id:"upgrading-to-v30",level:2},{value:"Matrix API changes",id:"matrix-api-changes",level:3},{value:"Matrix transforms now return Arrays by default",id:"matrix-transforms-now-return-arrays-by-default",level:3},{value:"Matrix setter functions no longer support ommitted parameters",id:"matrix-setter-functions-no-longer-support-ommitted-parameters",level:3},{value:"Upgrading to v2.0",id:"upgrading-to-v20",level:2},{value:"Upgrading to v1.1",id:"upgrading-to-v11",level:2},{value:"Removed Functionality",id:"removed-functionality",level:3}];function l(e){const r={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"upgrade-guide",children:"Upgrade Guide"})}),"\n",(0,t.jsx)(r.h2,{id:"upgrading-to-v41",children:"Upgrading to v4.1"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["The ",(0,t.jsx)(r.code,{children:"NumberArray"})," type now only covers classic JavaScript arrays ",(0,t.jsx)(r.code,{children:"number[]"}),", not typed arrays. Use ",(0,t.jsx)(r.code,{children:"NumericArray"})," to cover both classic and typed arrays."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"isTypedArray()"}),", ",(0,t.jsx)(r.code,{children:"isNumericArray()"})," - These utilities now return booleans rather than a typecasted input, but instead perform type narrowing, meaning that code after a check does not need a cast."]}),"\n"]}),"\n",(0,t.jsx)(r.h2,{id:"upgrading-to-v40",children:"Upgrading to v4.0"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"math.gl v4.0 is now packaged as ESM modules, but with additional CommonJS exports. In most cases you should not have problems importing 4.0."}),"\n",(0,t.jsxs)(r.li,{children:["The ",(0,t.jsx)(r.code,{children:"gl-matrix"})," dependency has been removed. You can still install / import gl-matrix in your application, it should remain highly compatible with math.gl."]}),"\n"]}),"\n",(0,t.jsx)(r.h2,{id:"upgrading-to-v36",children:"Upgrading to v3.6"}),"\n",(0,t.jsxs)(r.p,{children:["In version 3.6 the entire math.gl code base was converted to typescript (",(0,t.jsx)(r.code,{children:".ts"}),").\nWhile the API itself has not changed, in some cases, the introduction of types\nmade it harder to keep supporting some type signatures and overloads."]}),"\n",(0,t.jsx)(r.p,{children:"Known changes"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"Matrix4.lookAt()"})," - Now only accepts named parameters."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"SphericalCoordinates()"})," - Constructor is now more restrictive in terms of what parameters it accepts."]}),"\n"]}),"\n",(0,t.jsx)(r.p,{children:"Note that some omissions may be unintentional, feel free to report upgrade issues\nin the math.gl github repo."}),"\n",(0,t.jsx)(r.h2,{id:"upgrading-to-v30",children:"Upgrading to v3.0"}),"\n",(0,t.jsx)(r.h3,{id:"matrix-api-changes",children:"Matrix API changes"}),"\n",(0,t.jsx)(r.p,{children:"Matrix setter functions no longer support ommitted parameters. (Motivation: Increased API rigor, improved debugging and library compactness)."}),"\n",(0,t.jsx)(r.h3,{id:"matrix-transforms-now-return-arrays-by-default",children:"Matrix transforms now return Arrays by default"}),"\n",(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.code,{children:"Matrix4"})," and ",(0,t.jsx)(r.code,{children:"Matrix3"})," classes no longer by default create new ",(0,t.jsx)(r.code,{children:"Vector2"}),", ",(0,t.jsx)(r.code,{children:"Vector3"})," and ",(0,t.jsx)(r.code,{children:"Vector4"})," instances. Instead they create standard JavaScript arrays."]}),"\n",(0,t.jsxs)(r.p,{children:["Previously a new ",(0,t.jsx)(r.code,{children:"Vector4"})," would be allocated if no ",(0,t.jsx)(r.code,{children:"result"})," parameter was provided."]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-js",children:"import {Matrix4, Vector4} from '@math.gl/core';\nconst vector = new Matrix4().transform([0, 0, 0, 1]);\nassert(vector instanceof Vector4);\n"})}),"\n",(0,t.jsxs)(r.p,{children:["Now a plain JavaScript ",(0,t.jsx)(r.code,{children:"Array"})," is allocated"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-js",children:"import {Matrix4} from '@math.gl/core';\nconst vector = new Matrix4().transform([0, 0, 0, 1]);\nassert(vector instanceof Array);\n"})}),"\n",(0,t.jsx)(r.p,{children:"The old behavior can be restored by providing the result parameter"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-js",children:"import {Matrix4, Vector4} from '@math.gl/core';\nconst vector = new Matrix4().transform([0, 0, 0, 1], new Vector4());\nassert(vector instanceof Vector4);\n"})}),"\n",(0,t.jsx)(r.p,{children:"Motivation: This change reduces dependencies between math.gl core classes which improves tree-shaking and bundle sizes."}),"\n",(0,t.jsx)(r.h3,{id:"matrix-setter-functions-no-longer-support-ommitted-parameters",children:"Matrix setter functions no longer support ommitted parameters"}),"\n",(0,t.jsx)(r.p,{children:"Motivation: This change increases rigor, facilitates debugging, and improves library compactness, and the use case for default parameters was questionable."}),"\n",(0,t.jsx)(r.p,{children:"The following functions have been deprecated:"}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Method"}),(0,t.jsx)(r.th,{children:"Replacement"}),(0,t.jsx)(r.th,{children:"Reason"})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"Matrix*.setColumnMajor"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"Matrix*.set"})}),(0,t.jsx)(r.td,{children:"API simplification"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"Matrix4.transformPoint"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"Matrix4.transform"})}),(0,t.jsx)(r.td,{children:"Name alignment"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"Matrix4.transformVector"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"Matrix4.transform"})}),(0,t.jsx)(r.td,{children:"Name alignment"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"Matrix4.transformDirection"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"Matrix4.transformAsVector"})}),(0,t.jsx)(r.td,{children:"Name alignment"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"Matrix3.transformVector"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"Matrix3.transform"})}),(0,t.jsx)(r.td,{children:"Name alignment"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"Matrix3.transformVector2"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"Matrix3.transform"})}),(0,t.jsx)(r.td,{children:"Generalize"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"Matrix3.transformVector3"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"Matrix3.transform"})}),(0,t.jsx)(r.td,{children:"Generalize"})]})]})]}),"\n",(0,t.jsx)(r.p,{children:"The following functions have been removed:"}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Method"}),(0,t.jsx)(r.th,{children:"Replacement"}),(0,t.jsx)(r.th,{children:"Reason"})]})}),(0,t.jsx)(r.tbody,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"Vector2.cross"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"Vector3.cross"})}),(0,t.jsx)(r.td,{children:"Cross products by definition work on 3 dimensional vectors."})]})})]}),"\n",(0,t.jsx)(r.h2,{id:"upgrading-to-v20",children:"Upgrading to v2.0"}),"\n",(0,t.jsxs)(r.p,{children:["Experimental exports are now exported with a leading underscore (_), instead of as members of the ",(0,t.jsx)(r.code,{children:"experimental"})," namespace:"]}),"\n",(0,t.jsx)(r.p,{children:"NOW: math.gl v2"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-js",children:"import {_Euler as Euler} from '@math.gl/core';\n"})}),"\n",(0,t.jsx)(r.p,{children:"BEFORE: math.gl v1.x"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-js",children:"import {experimental} from '@math.gl/core';\nconst {Euler} = experimental;\n"})}),"\n",(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.code,{children:"experimental"})," name space export has been removed."]}),"\n",(0,t.jsx)(r.h2,{id:"upgrading-to-v11",children:"Upgrading to v1.1"}),"\n",(0,t.jsx)(r.h3,{id:"removed-functionality",children:"Removed Functionality"}),"\n",(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.code,{children:"Euler"})," class is no longer included as an experimental export. It would need to be imported from the ",(0,t.jsx)(r.code,{children:"dist"})," folder."]})]})}function h(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>d,x:()=>a});var t=n(6540);const i={},s=t.createContext(i);function d(e){const r=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),t.createElement(s.Provider,{value:r},e.children)}}}]);