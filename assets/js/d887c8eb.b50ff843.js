"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[1252],{5853:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=i(4848),t=i(8453);const o={},s="BoundingVolume (Interface)",l={id:"modules/culling/api-reference/bounding-volume",title:"BoundingVolume (Interface)",description:"An interface defining common operations for bounding volumes (i.e. BoundingSphere, AxisAlignedBoundingBox, OrientedBoundingBox).",source:"@site/../docs/modules/culling/api-reference/bounding-volume.md",sourceDirName:"modules/culling/api-reference",slug:"/modules/culling/api-reference/bounding-volume",permalink:"/math.gl/docs/modules/culling/api-reference/bounding-volume",draft:!1,unlisted:!1,editUrl:"https://github.com/visgl/math.gl/tree/master/docs/../docs/modules/culling/api-reference/bounding-volume.md",tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"BoundingSphere",permalink:"/math.gl/docs/modules/culling/api-reference/bounding-sphere"},next:{title:"CullingVolume",permalink:"/math.gl/docs/modules/culling/api-reference/culling-volume"}},d={},c=[{value:"Global Functions",id:"global-functions",level:2},{value:"Members",id:"members",level:2},{value:"intersectPlane(plane : Plane) : INTERSECTION",id:"intersectplaneplane--plane--intersection",level:3},{value:"transform(transform : Number[16]) : BoundingSphere",id:"transformtransform--number16--boundingsphere",level:3},{value:"distanceSquaredTo(point) : Number",id:"distancesquaredtopoint--number",level:3},{value:"Attribution",id:"attribution",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"boundingvolume-interface",children:"BoundingVolume (Interface)"})}),"\n",(0,r.jsxs)(n.p,{children:["An interface defining common operations for bounding volumes (i.e. ",(0,r.jsx)(n.code,{children:"BoundingSphere"}),", ",(0,r.jsx)(n.code,{children:"AxisAlignedBoundingBox"}),", ",(0,r.jsx)(n.code,{children:"OrientedBoundingBox"}),")."]}),"\n",(0,r.jsx)(n.h2,{id:"global-functions",children:"Global Functions"}),"\n",(0,r.jsx)(n.h2,{id:"members",children:"Members"}),"\n",(0,r.jsx)(n.h3,{id:"intersectplaneplane--plane--intersection",children:"intersectPlane(plane : Plane) : INTERSECTION"}),"\n",(0,r.jsx)(n.p,{children:"Determines which side of a plane a sphere is located."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"plane"})," The plane to test against.\nReturns"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"INTERSECTION.INSIDE"})," if the entire sphere is on the side of the plane the normal is pointing"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"INTERSECTION.OUTSIDE"})," if the entire sphere is on the opposite side"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"INTERSECTION.INTERSECTING"})," if the sphere intersects the plane."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"transformtransform--number16--boundingsphere",children:"transform(transform : Number[16]) : BoundingSphere"}),"\n",(0,r.jsx)(n.p,{children:"Applies a 4x4 affine transformation matrix to a bounding sphere."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"transform"})," The transformation matrix to apply to the bounding sphere."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"distancesquaredtopoint--number",children:"distanceSquaredTo(point) : Number"}),"\n",(0,r.jsx)(n.p,{children:"Computes the estimated distance squared from the closest point on a bounding sphere to a point."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"point"})," The point"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Returns"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The estimated distance squared from the bounding sphere to the point."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"attribution",children:"Attribution"}),"\n",(0,r.jsxs)(n.p,{children:["This class was ported from ",(0,r.jsx)(n.a,{href:"https://github.com/AnalyticalGraphicsInc/cesium",children:"Cesium"})," under the Apache 2 License."]})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>l});var r=i(6540);const t={},o=r.createContext(t);function s(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);