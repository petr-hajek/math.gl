"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[516],{5680:(e,a,r)=>{r.d(a,{xA:()=>p,yg:()=>g});var n=r(6540);function t(e,a,r){return a in e?Object.defineProperty(e,a,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[a]=r,e}function l(e,a){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var a=1;a<arguments.length;a++){var r=null!=arguments[a]?arguments[a]:{};a%2?l(Object(r),!0).forEach((function(a){t(e,a,r[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(r,a))}))}return e}function o(e,a){if(null==e)return{};var r,n,t=function(e,a){if(null==e)return{};var r,n,t={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],a.indexOf(r)>=0||(t[r]=e[r]);return t}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],a.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(t[r]=e[r])}return t}var y=n.createContext({}),c=function(e){var a=n.useContext(y),r=a;return e&&(r="function"==typeof e?e(a):i(i({},a),e)),r},p=function(e){var a=c(e.components);return n.createElement(y.Provider,{value:a},e.children)},s="mdxType",d={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},u=n.forwardRef((function(e,a){var r=e.components,t=e.mdxType,l=e.originalType,y=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),s=c(r),u=t,g=s["".concat(y,".").concat(u)]||s[u]||d[u]||l;return r?n.createElement(g,i(i({ref:a},p),{},{components:r})):n.createElement(g,i({ref:a},p))}));function g(e,a){var r=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var l=r.length,i=new Array(l);i[0]=u;var o={};for(var y in a)hasOwnProperty.call(a,y)&&(o[y]=a[y]);o.originalType=e,o[s]="string"==typeof e?e:t,i[1]=o;for(var c=2;c<l;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},5516:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>y,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var n=r(8168),t=(r(6540),r(5680));const l={},i="MathArray",o={unversionedId:"modules/core/api-reference/math-array",id:"modules/core/api-reference/math-array",title:"MathArray",description:"Usage",source:"@site/../docs/modules/core/api-reference/math-array.md",sourceDirName:"modules/core/api-reference",slug:"/modules/core/api-reference/math-array",permalink:"/math.gl/docs/modules/core/api-reference/math-array",draft:!1,editUrl:"https://github.com/visgl/math.gl/tree/master/docs/../docs/modules/core/api-reference/math-array.md",tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Euler",permalink:"/math.gl/docs/modules/core/api-reference/euler"},next:{title:"Matrix",permalink:"/math.gl/docs/modules/core/api-reference/matrix"}},y={},c=[{value:"Usage",id:"usage",level:2},{value:"Methods",id:"methods",level:2},{value:"clone",id:"clone",level:3},{value:"copy",id:"copy",level:3},{value:"set",id:"set",level:3},{value:"fromArray",id:"fromarray",level:3},{value:"toString",id:"tostring",level:3},{value:"formatString",id:"formatstring",level:3},{value:"toArray",id:"toarray",level:3},{value:"toFloat32Array",id:"tofloat32array",level:3},{value:"equals",id:"equals",level:3},{value:"exactEquals",id:"exactequals",level:3},{value:"length",id:"length",level:3},{value:"lengthSquared",id:"lengthsquared",level:3},{value:"distance",id:"distance",level:3},{value:"distanceSquared",id:"distancesquared",level:3},{value:"normalize",id:"normalize",level:3},{value:"validate",id:"validate",level:3},{value:"check",id:"check",level:3}],p={toc:c},s="wrapper";function d(e){let{components:a,...r}=e;return(0,t.yg)(s,(0,n.A)({},p,r,{components:a,mdxType:"MDXLayout"}),(0,t.yg)("h1",{id:"matharray"},"MathArray"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"class MathArray extends Array\n")),(0,t.yg)("h2",{id:"usage"},"Usage"),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"MathArray")," is a base class, and should not be instantiated directly."),(0,t.yg)("p",null,"Cloning an object"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"const clone = vector.clone();\n")),(0,t.yg)("p",null,"Scaling with constants"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"const u = v.scale(-1); // Reverse direction vector\n")),(0,t.yg)("p",null,"Scaling with vectors is very flexible, you can e.g. set a component to zero, or flip a component's sign."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"const u = v.scale([1, 1, 0]); // Set z component to zero\nconst w = v.scale([1, -1, 1]); // Flip y component\n")),(0,t.yg)("h2",{id:"methods"},"Methods"),(0,t.yg)("h3",{id:"clone"},"clone"),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"array.clone()")),(0,t.yg)("h3",{id:"copy"},"copy"),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"array.copy(array)")),(0,t.yg)("h3",{id:"set"},"set"),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"array.set(...args)")),(0,t.yg)("h3",{id:"fromarray"},"fromArray"),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"array.fromArray(array, offset = 0)")),(0,t.yg)("h3",{id:"tostring"},"toString"),(0,t.yg)("p",null,"Calls ",(0,t.yg)("inlineCode",{parentName:"p"},"formatString")," with the global math.gl config."),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"array.toString()")),(0,t.yg)("h3",{id:"formatstring"},"formatString"),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"array.formatString(config)")),(0,t.yg)("h3",{id:"toarray"},"toArray"),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"array.toArray(array = [], offset = 0)")),(0,t.yg)("h3",{id:"tofloat32array"},"toFloat32Array"),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"array.toFloat32Array()")),(0,t.yg)("h3",{id:"equals"},"equals"),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"array.equals(array)")),(0,t.yg)("h3",{id:"exactequals"},"exactEquals"),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"array.exactEquals(array)")),(0,t.yg)("h3",{id:"length"},"length"),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"array.length()")),(0,t.yg)("h3",{id:"lengthsquared"},"lengthSquared"),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"array.lengthSquared()")),(0,t.yg)("h3",{id:"distance"},"distance"),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"array.distance(mathArray)")),(0,t.yg)("h3",{id:"distancesquared"},"distanceSquared"),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"array.distanceSquared(mathArray)")),(0,t.yg)("h3",{id:"normalize"},"normalize"),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"array.normalize()")),(0,t.yg)("h3",{id:"validate"},"validate"),(0,t.yg)("p",null,"Checks if a ",(0,t.yg)("inlineCode",{parentName:"p"},"MathArray")," contains valid values."),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"array.validate(array = this)")),(0,t.yg)("p",null,"Returns ",(0,t.yg)("inlineCode",{parentName:"p"},"false")," if any value fails ",(0,t.yg)("inlineCode",{parentName:"p"},"Number.isFinite")," test."),(0,t.yg)("h3",{id:"check"},"check"),(0,t.yg)("p",null,"If ",(0,t.yg)("inlineCode",{parentName:"p"},"config.debug")," is true, validates the ",(0,t.yg)("inlineCode",{parentName:"p"},"MathArray")," and throws an error if it does not contains valid values."),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"array.check(array = this)")),(0,t.yg)("p",null,"Mote: This method is called by all mutating methods."))}d.isMDXComponent=!0}}]);