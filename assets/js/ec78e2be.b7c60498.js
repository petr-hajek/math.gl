"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[5260],{4942:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>d,toc:()=>c});var r=n(4848),t=n(8453);const o={},i="Overview",d={id:"modules/proj4/README",title:"Overview",description:"The @math.gl/proj4 module provides support for conversion between major geospatial coordinate reference systems (CRS) and projections used with computer maps, such as:",source:"@site/../docs/modules/proj4/README.md",sourceDirName:"modules/proj4",slug:"/modules/proj4/",permalink:"/math.gl/docs/modules/proj4/",draft:!1,unlisted:!1,editUrl:"https://github.com/visgl/math.gl/tree/master/docs/../docs/modules/proj4/README.md",tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Polygon",permalink:"/math.gl/docs/modules/polygon/api-reference/polygon"},next:{title:"Proj4Projection",permalink:"/math.gl/docs/modules/proj4/api-reference/proj4-projection"}},l={},c=[{value:"Classes",id:"classes",level:2},{value:"Usage",id:"usage",level:2},{value:"Geospatial Coordinate Systems",id:"geospatial-coordinate-systems",level:2},{value:"Aliases",id:"aliases",level:3},{value:"References",id:"references",level:3},{value:"Attribution",id:"attribution",level:2}];function a(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"overview",children:"Overview"})}),"\n",(0,r.jsx)("p",{class:"badges",children:(0,r.jsx)("img",{src:"https://img.shields.io/badge/From-v3.3-blue.svg?style=flat-square",alt:"From-v3.3"})}),"\n",(0,r.jsxs)(s.p,{children:["The ",(0,r.jsx)(s.code,{children:"@math.gl/proj4"})," module provides support for conversion between major geospatial coordinate reference systems (CRS) and projections used with computer maps, such as:"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.a,{href:"https://en.wikipedia.org/wiki/World_Geodetic_System",children:"WGS84"})," (World Geodetic System) coordinates."]}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.a,{href:"https://en.wikipedia.org/wiki/Web_Mercator_projection",children:"Web Mercator Projection"})}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"classes",children:"Classes"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Class"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsx)(s.tbody,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"Proj4Projection"})}),(0,r.jsx)(s.td,{children:"A projection class"})]})})]}),"\n",(0,r.jsx)(s.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(s.p,{children:"Reproject WGS84 coordinates to another CRS"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",children:"import {Proj4Projection} from '@math.gl/proj4';\n\nconst nad83Proj =\n  '+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees';\nconst projection = new Proj4Projection({from: 'WGS84', to: nad83Proj});\n\nconst wgs84Position = [21, 78, 5000];\nconst reprojectedPosition = projection.project(wgs84Position);\n"})}),"\n",(0,r.jsx)(s.h2,{id:"geospatial-coordinate-systems",children:"Geospatial Coordinate Systems"}),"\n",(0,r.jsxs)(s.p,{children:["There are an infinite number of possible coordinate systems; therefore strict syntax is required to describe the parameters of any given CRS. Two main systems are supported in this module: Proj4 strings and WKT strings. Within WKT there exists both OGC WKT and ESRI WKT syntax; both are generally supported though some more-obscure projection keywords may not be used. Note that Proj4 strings ",(0,r.jsx)(s.a,{href:"https://github.com/proj4js/proj4js/issues/222",children:"can be slightly more accurate"})," in some circumstances than WKT strings."]}),"\n",(0,r.jsxs)(s.p,{children:['There are thousands of named "EPSG" projections. This module only includes aliases for those in the section below by default. To use a different EPSG projection, you can use ',(0,r.jsx)(s.a,{href:"https://epsg.io",children:"https://epsg.io"}),". For example, ",(0,r.jsx)(s.a,{href:"https://epsg.io/4326",children:"https://epsg.io/4326"})," defines standard longitude-latitude coordinates and lists multiple projection strings. Choose one of the ",(0,r.jsx)(s.code,{children:"OGC WKT"}),", ",(0,r.jsx)(s.code,{children:"ESRI WKT"}),", or ",(0,r.jsx)(s.code,{children:"PROJ.4"})," strings listed."]}),"\n",(0,r.jsxs)(s.p,{children:["The epsg.io website also has a public API, e.g., for WGS 84: ",(0,r.jsx)(s.code,{children:"https://epsg.io/?q=4326&format=json"})]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-json",children:'{\n  "status": "ok",\n  "number_result": 1,\n  "results": [\n    {\n      "code": "4326",\n      "kind": "CRS-GEOGCRS",\n      "bbox": [90.0, -180.0, -90.0, 180.0],\n      "wkt": "GEOGCS[\\"WGS 84\\",DATUM[\\"WGS_1984\\",SPHEROID[\\"WGS 84\\",6378137,298.257223563,AUTHORITY[\\"EPSG\\",\\"7030\\"]],AUTHORITY[\\"EPSG\\",\\"6326\\"]],PRIMEM[\\"Greenwich\\",0,AUTHORITY[\\"EPSG\\",\\"8901\\"]],UNIT[\\"degree\\",0.0174532925199433,AUTHORITY[\\"EPSG\\",\\"9122\\"]],AUTHORITY[\\"EPSG\\",\\"4326\\"]]",\n      "unit": "degree (supplier to define representation)",\n      "proj4": "+proj=longlat +datum=WGS84 +no_defs",\n      "name": "WGS 84",\n      "area": "World.",\n      "default_trans": 0,\n      "trans": [],\n      "accuracy": ""\n    }\n  ]\n}\n'})}),"\n",(0,r.jsx)(s.p,{children:"If you already know the EPSG identifier, you can make the API request even simpler by adding the desired extension to your url:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:'// https://epsg.io/4326.wkt\nGEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4326"]]\n'})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:"// https://epsg.io/4326.proj4\n+proj=longlat +datum=WGS84 +no_defs\n"})}),"\n",(0,r.jsx)(s.h3,{id:"aliases",children:"Aliases"}),"\n",(0,r.jsx)(s.p,{children:"Note that Proj4Projection allows aliases to be defined and comes with the following pre-installed aliases."}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Coordinate system"}),(0,r.jsx)(s.th,{children:"Aliases"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Lat/lon, WGS84 datum"}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"EPSG:4326"}),", ",(0,r.jsx)(s.code,{children:"WGS84"})]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Lat/lon, NAD83 datum"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"EPSG:4269"})})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Web mercator"}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"EPSG:3857"}),", ",(0,r.jsx)(s.code,{children:"EPSG:3785"}),", ",(0,r.jsx)(s.code,{children:"GOOGLE"}),", ",(0,r.jsx)(s.code,{children:"EPSG:900913"}),", ",(0,r.jsx)(s.code,{children:"EPSG:102113"})]})]})]})]}),"\n",(0,r.jsx)(s.h3,{id:"references",children:"References"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.a,{href:"http://docs.opengeospatial.org/is/18-010r7/18-010r7.html",children:"OGC WKT-CRS Specification"})," standards documentation."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.a,{href:"https://spatialreference.org/",children:"spatialreference.org"})," a catalog of coordinate system references."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.a,{href:"https://epsg.io/",children:"espg.io"})," Lets the user look up the definition of a coordinate system."]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["E.g. ",(0,r.jsx)(s.a,{href:"https://epsg.io/4326",children:"https://epsg.io/4326"})," provides the definition of WGS84 in WKT-CRS format:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:'GEOGCS["WGS 84",\n    DATUM["WGS_1984",\n        SPHEROID["WGS 84",6378137,298.257223563,\n            AUTHORITY["EPSG","7030"]],\n        AUTHORITY["EPSG","6326"]],\n    PRIMEM["Greenwich",0,\n        AUTHORITY["EPSG","8901"]],\n    UNIT["degree",0.0174532925199433,\n        AUTHORITY["EPSG","9122"]],\n    AUTHORITY["EPSG","4326"]]\n'})}),"\n",(0,r.jsx)(s.h2,{id:"attribution",children:"Attribution"}),"\n",(0,r.jsxs)(s.p,{children:["This module is a wrapper around ",(0,r.jsx)(s.a,{href:"http://proj4js.org/",children:(0,r.jsx)(s.code,{children:"proj4js"})}),", which has a permissive ",(0,r.jsx)(s.a,{href:"https://github.com/proj4js/proj4js/blob/master/LICENSE.md",children:"license"}),". A part of the ",(0,r.jsx)(s.a,{href:"https://trac.osgeo.org/metacrs/wiki",children:"MetaCRS"})," libraries."]})]})}function h(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>d});var r=n(6540);const t={},o=r.createContext(t);function i(e){const s=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(o.Provider,{value:s},e.children)}}}]);